#!/bin/env python3

## Copyright (c) 2022, Lancaster University
## All rights reserved.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted provided that the following conditions
## are met:
##
## 1. Redistributions of source code must retain the above copyright
##    notice, this list of conditions and the following disclaimer.
##
## 2. Redistributions in binary form must reproduce the above
##    copyright notice, this list of conditions and the following
##    disclaimer in the documentation and/or other materials provided
##    with the distribution.
##
## 3. Neither the name of the copyright holder nor the names of its
##    contributors may be used to endorse or promote products derived
##    from this software without specific prior written permission.
##
## THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
## "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
## LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
## FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
## COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
## SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
## HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
## STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
## OF THE POSSIBILITY OF SUCH DAMAGE.

import functools
import sys
from http.server import BaseHTTPRequestHandler, HTTPServer
from getopt import getopt

## Local libraries
import perfsonar
import metrics

http_host = "localhost"
http_port = 8732
endpoint = None
horizon = 60 * 30
lag = 20
opts, args = getopt(sys.argv[1:], "h:t:T:E:S:l:")
for opt, val in opts:
    if opt == '-h':
        horizon = int(val) * 60
    elif opt == '-l':
        lag = int(val)
    elif opt == '-T':
        http_host = val
    elif opt == '-t':
        http_port = int(val)
    elif opt == '-E':
        endpoint = val
    elif opt == '-S':
        endpoint = 'https://' + val + '/esmond/perfsonar/archive/'
        pass
    continue

class MetricsSender(BaseHTTPRequestHandler):
    def __init__(self, *args, hist=None, coll=None, **kwargs):
        self.hist = hist
        self.coll = coll
        super().__init__(*args, **kwargs)
        pass

    def do_GET(self):
        ## Identify the client by the authorization string.
        auth = self.headers.get('Authorization')
        if auth is None:
            auth = 'anonymous'
            pass

        ## Ensure we have the latest metrics.
        print('\nGetting latest data')
        new_data = self.coll.update()
        print('  Installing latest data')
        self.hist.install(new_data)

        ## Fetch the message appropriate to the client, and send it.
        print('  Forming message for %s' % auth)
        body = self.hist.get_message(auth)
        self.send_response(200)
        ct = 'application/openmetrics-text'
        ct += '; version=1.0.0; charset=utf-8'
        self.send_header('Content-Type', ct)
        self.end_headers()
        self.wfile.write(body.encode('UTF-8'))
        print('  Complete')
        pass

    pass

methist = metrics.MetricHistory(perfsonar.schema, horizon=horizon)
perfcoll = perfsonar.PerfsonarCollector(endpoint, lag=lag)
partial_handler = functools.partial(MetricsSender, hist=methist, coll=perfcoll)
webserver = HTTPServer((http_host, http_port), partial_handler)

try:
    webserver.serve_forever()
except KeyboardInterrupt:
    pass
